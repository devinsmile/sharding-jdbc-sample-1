<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xmlns:rdb="http://www.dangdang.com/schema/ddframe/rdb"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
                        http://www.dangdang.com/schema/ddframe/rdb http://www.dangdang.com/schema/ddframe/rdb/rdb.xsd">

	<bean id="partition1" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${partition1.driverClassName}" />
		<property name="url"
			value="${partition1.url}&amp;zeroDateTimeBehavior=convertToNull&amp;allowMultiQueries=true" />
		<property name="username" value="${partition1.username}" />
		<property name="password" value="${partition1.password}" />
		<property name="defaultAutoCommit" value="false" />
		<property name="maxActive" value="${partition1.maxActive}" />
		<property name="maxIdle" value="${partition1.maxIdle}" />
		<property name="maxWait" value="${partition1.maxWait}" />
		<property name="initialSize" value="${partition1.initialSize}" />
		<property name="minIdle" value="${partition1.minIdle}" />
		<property name="logAbandoned" value="${partition1.logAbandoned}" />
		<property name="testWhileIdle" value="${partition1.testWhileIdle}" />
		<property name="testOnReturn" value="${partition1.testOnReturn}" />
		<property name="testOnBorrow" value="${partition1.testOnBorrow}" />
		<property name="validationQuery" value="${partition1.validationQuery}" />
		<property name="numTestsPerEvictionRun" value="${partition1.numTestsPerEvictionRun}" />
		<property name="timeBetweenEvictionRunsMillis" value="${partition1.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${partition1.minEvictableIdleTimeMillis}" />
		<property name="removeAbandoned" value="${partition1.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${partition1.removeAbandonedTimeout}" />
	</bean>
	
	
	<bean id="ds_0" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc-driver}"/>
        <property name="url" value="${jdbc-url-0}"/>
        <property name="username" value="${jdbc-user-0}"/>
        <property name="password" value="${jdbc-password-0}"/>
    </bean>

    <!--数据源1-->
    <bean id="ds_1" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc-driver}"/>
        <property name="url" value="${jdbc-url-1}"/>
        <property name="username" value="${jdbc-user-1}"/>
        <property name="password" value="${jdbc-password-1}"/>
    </bean>

    <!--数据源2-->
    <bean id="ds_2" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc-driver}"/>
        <property name="url" value="${jdbc-url-2}"/>
        <property name="username" value="${jdbc-user-2}"/>
        <property name="password" value="${jdbc-password-2}"/>
    </bean>
	
	
	<!-- 
	<rdb:strategy id="orderTableStrategy" sharding-columns="order_id" algorithm-expression="t_order_${order_id.longValue()%2}"/>
	-->
	<rdb:strategy id="orderTableStrategy" sharding-columns="order_id" algorithm-class="com.jd.sharding.util.SingleKeyModuloTableShardingAlgorithm"/>
	<rdb:strategy id="databaseShardingStrategy" sharding-columns="user_id" algorithm-class="com.jd.sharding.util.SingleKeyModuloDatabaseShardingAlgorithm"/>

    <rdb:data-source id="shardingDataSource">
        <rdb:sharding-rule data-sources="ds_0,ds_1,ds_2">
            <rdb:table-rules>
                <rdb:table-rule 
                logic-table="t_order" 
                actual-tables="t_order_0,t_order_1" 
                database-strategy="databaseShardingStrategy" 
                table-strategy="orderTableStrategy"
                />
                <!--  
                	<rdb:table-rule logic-table="t_order_item" actual-tables="t_order_item_${0..3}" table-strategy="orderItemTableStrategy"/>
            	-->
            </rdb:table-rules>
            
            <!-- 数据库暂时不分库
            <rdb:default-database-strategy sharding-columns="none" algorithm-class="com.dangdang.ddframe.rdb.sharding.api.strategy.database.NoneDatabaseShardingAlgorithm"/>
        	 -->
      
        </rdb:sharding-rule>
    </rdb:data-source>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 
		partition1
		<property name="dataSource" ref="shardingDataSource" />
		 -->
		<property name="dataSource" ref="shardingDataSource" />
		
		<property name="configLocation">
			<value>classpath:mybatis-base-config.xml</value>
		</property>
		<property name="mapperLocations" value="classpath:mybatis-mapper/**/*.xml" />
	</bean>
	
	<!-- Mapper扫描 -->
	<bean id="mybatisMapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
  		<property name="basePackage" value="com.jd.sharding.**.mapper" />
  		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="partition1" />
	</bean>
	<bean id="transactionDefinition" class="org.springframework.transaction.support.DefaultTransactionDefinition">
        <property name="propagationBehaviorName" value="PROPAGATION_REQUIRED"></property>
    </bean>
    
	<tx:annotation-driven transaction-manager="transactionManager" />

</beans>